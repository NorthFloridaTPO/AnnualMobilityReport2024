---
title: "Annual Mobility Report 2024"
format: 
  html:
      toc: true
      toc_float: true
      toc-title: Contents
      toc_location: left
editor: visual
number-sections: true
execute: 
  echo: false
  warning: false
  message: false
  fig.with: 9
---

```{r package}

library(tidyverse)
library(ggplot2)
library(plotly)
library(dplyr)
```

# Safe and Secure Travel

Crash data was compiled from several sources including the FDOT safety office, signal four analytics, and FDOT State Safety Office historical Crash Analysis Reporting (CAR) database. According to the Florida Highway Safety and Motor Vehicles, there were a total of 31,964 crashes that occurred over the four North Florida TPO counties. Duval County accounted for a majority of these crashes due to the county population and extent of roadways present. 

```{r}
df <- read.csv("~/GitHub/amr_2024/data/NF_Bike_Ped_fatalcrashes_19_23.csv")

# Calculate year totals
df_totals <- df %>%
  group_by(Year) %>%
  summarise(Total_PedFatal = mean(PedTotals),Total_BikeFatal = mean(BikeTotals),
            Ped_PC = mean(Ped_PC),Bike_PC = mean(Bike_PC))
```

## Pedestrian Fatalities

This plot shows fatality data

```{r}

# Filter data for PedFatal > 0
df_filtered <- df[df$PedFatal > 0, ]

p <- ggplot(df_filtered, aes(x = Year, y = PedFatal, fill = County)) +
  geom_col() +
  theme_minimal()+
  geom_text(aes(label = PedFatal),  # Add text labels
            size = 4,# Adjust vertical position (above bars)
            hjust = .5,                # Adjust horizontal position (center)
            position=position_stack(vjust=.5),
            check_overlap=TRUE)
# Convert to an interactive plotly object
p_interactive <- ggplotly(p, tooltip = c("PedFatal","County")) %>%
  layout(yaxis = list(title = "Pedestrian Fatalities", zeroline = FALSE, 
                      showline = FALSE),
         hoverlabel = list(bgcolor= 'white')) 

p_interactive
```

## Bicyclist Fatalities

```{r}
# Filter data for PedFatal > 0
df_filtered <- df[df$BikeFatal > 0, ]
p <- ggplot(df_filtered, aes(x = Year, y = BikeFatal, fill = County)) +
  geom_col() +
  theme_minimal()+
  geom_text(aes(label = BikeFatal),  # Add text labels
            size = 4,# Adjust vertical position (above bars)
            hjust = .5,                # Adjust horizontal position (center)
            position=position_stack(vjust=.5),
            check_overlap=TRUE) 

annotations <- list()
for (i in 1:length(df_filtered$PedFatal)) {
  annotations[[i]] <- list(x = df$x[[i]],
                           y = df$y[[i]],
                           text = df_filtered$PedFatal[[i]],
                           yanchor='top',
                           showarrow = FALSE)}

# Convert to an interactive plotly object
p_interactive <- ggplotly(p, tooltip = c("BikeFatal","County")) %>%
  layout(yaxis = list(title = "Bicyclist Fatalities", zeroline = FALSE, 
                      showline = FALSE),
         hoverlabel = list(bgcolor= 'white'))

p_interactive
```

## Fatality Totals

Pedestrian fatalities are on the rise while bicyclist fatalities have fallen.
```{r}
fig <- plot_ly(df_totals, x = ~Year, y = ~Total_PedFatal, name = "Total Pedestrian Fatalities", type = 'scatter', mode = 'lines') 
fig <- fig %>% add_trace(y = ~Total_BikeFatal, name = 'Total Bicycle Fatalities')
fig

```

## Fatality Percent Changes 

The following summarizes the percent change in fatalities for pedestrians and cyclists since 2019.
```{r}
fig <- plot_ly(df_totals, x = ~Year, y = ~Ped_PC, name = "Pedestrian Fatalities Percent Change Since 2019", type = 'bar') 
fig <- fig %>% add_trace(y = ~Bike_PC, name = 'Bicycle Fatalities Percent Change Since 2019')
fig

```
# Map Example

Here is an example of an interactive map.
```{r}
library(plotly)
df <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2011_us_ag_exports.csv")
df$hover <- with(df, paste(state, '<br>', "Beef", beef, "Dairy", dairy, "<br>",
                           "Fruits", total.fruits, "Veggies", total.veggies,
                           "<br>", "Wheat", wheat, "Corn", corn))
# give state boundaries a white border
l <- list(color = toRGB("white"), width = 2)
# specify some map projection/options
g <- list(
  scope = 'usa',
  projection = list(type = 'albers usa'),
  showlakes = TRUE,
  lakecolor = toRGB('white')
)

fig <- plot_geo(df, locationmode = 'USA-states')
fig <- fig %>% add_trace(
    z = ~total.exports, text = ~hover, locations = ~code,
    color = ~total.exports, colors = 'Purples'
  )
fig <- fig %>% colorbar(title = "Millions USD")
fig <- fig %>% layout(
    title = '2011 US Agriculture Exports by State<br>(Hover for breakdown)',
    geo = g
  )

fig

```
